// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Poke.Infra.Context;

namespace Poke.Infra.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Poke.Core.Entities.Pokemon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("FirstType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("first_type");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("height");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<string>("SecondType")
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("second_type");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("species");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("Pokemons", "dbo");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.BaseStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("integer")
                        .HasColumnName("attack");

                    b.Property<int>("Defense")
                        .HasColumnType("integer")
                        .HasColumnName("defense");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer")
                        .HasColumnName("hitpoints");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uuid")
                        .HasColumnName("pokemon_id");

                    b.Property<int>("SpecialAttack")
                        .HasColumnType("integer")
                        .HasColumnName("special_attack");

                    b.Property<int>("SpecialDefense")
                        .HasColumnType("integer")
                        .HasColumnName("special_defense");

                    b.Property<int>("Speed")
                        .HasColumnType("integer")
                        .HasColumnName("speed");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId")
                        .IsUnique();

                    b.ToTable("BaseStats", "dbo");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.Evolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("PkmnEvolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PkmnEvolutionId");

                    b.ToTable("Evolutions", "dbo");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.PreEvolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("PkmnPreEvolutionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PkmnPreEvolutionId")
                        .IsUnique();

                    b.ToTable("PreEvolutions", "dbo");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BaseExperience")
                        .HasColumnType("integer")
                        .HasColumnName("base_experience");

                    b.Property<int>("BaseFriendship")
                        .HasColumnType("integer")
                        .HasColumnName("base_friendship");

                    b.Property<decimal>("CatchRate")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("catch_rate");

                    b.Property<int>("EVYeld")
                        .HasColumnType("integer")
                        .HasColumnName("ev_yeld");

                    b.Property<int>("GrowthRate")
                        .HasColumnType("integer")
                        .HasColumnName("growth_rate");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uuid")
                        .HasColumnName("pokemon_id");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId")
                        .IsUnique();

                    b.ToTable("Tranings", "dbo");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.BaseStats", b =>
                {
                    b.HasOne("Poke.Core.Entities.Pokemon", "Pokemon")
                        .WithOne("BaseStats")
                        .HasForeignKey("Poke.Core.ValueObjects.BaseStats", "PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.Evolution", b =>
                {
                    b.HasOne("Poke.Core.Entities.Pokemon", "PkmnEvolution")
                        .WithMany("Evolutions")
                        .HasForeignKey("PkmnEvolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PkmnEvolution");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.PreEvolution", b =>
                {
                    b.HasOne("Poke.Core.Entities.Pokemon", "PkmnPreEvolution")
                        .WithOne("PreEvolution")
                        .HasForeignKey("Poke.Core.ValueObjects.PreEvolution", "PkmnPreEvolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PkmnPreEvolution");
                });

            modelBuilder.Entity("Poke.Core.ValueObjects.Training", b =>
                {
                    b.HasOne("Poke.Core.Entities.Pokemon", "Pokemon")
                        .WithOne("Traning")
                        .HasForeignKey("Poke.Core.ValueObjects.Training", "PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Poke.Core.Entities.Pokemon", b =>
                {
                    b.Navigation("BaseStats");

                    b.Navigation("Evolutions");

                    b.Navigation("PreEvolution");

                    b.Navigation("Traning");
                });
#pragma warning restore 612, 618
        }
    }
}
